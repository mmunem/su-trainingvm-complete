---

- name: WebServer | Create WEB Security Group
  local_action:
    module: ec2_group
    name: "{{ item.sg_name }}"
    description: "{{ item.sg_description }}"
    region: "{{ vpc_region }}" # Change the AWS region here
    vpc_id: "{{ vpc.vpc_id }}" # vpc is the resgister name, you can also set it manually
    state: present
    rules: "{{ item.sg_rules }}"
  with_items: web_security_groups
  register: web_sg

- name: WebServer | Tag the WEB Security Group with a name
  local_action:
    module: ec2_tag
    resource: "{{ item.group_id}}"
    region: "{{ vpc_region }}"
    state: present
    tags:
      Name: "{{ item.item.sg_name }}"
  with_items: web_sg.results

#- debug: var="{{ web_sg }}"

- name: EC2_LC | Create our Launch Configuration
  local_action:
    module: ec2_lc
    region: "{{ vpc_region }}"
    name: "{{ lc_name }}"
    image_id: "{{ web_ami_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ item.group_id }}"
    instance_type: "{{ web_instance_type }}"
  with_items: web_sg.results
  register: lc


- name: EC2_ASG | Create our Auto Scaling Group
  local_action:
    module: ec2_asg
    state: present
    region: "{{ vpc_region }}"
    availability_zones: 
       - "{{ public_az_1 }}"
       - "{{ public_az_2 }}"
    vpc_zone_identifier:
       - "{{ public_subnet_1 }}"
       - "{{ public_subnet_2 }}"   
    name: "{{ asg_name }}"
    launch_config_name: "{{ lc_name }}"
    min_size: "{{ asg_min }}"
    max_size: "{{ asg_max }}"
    desired_capacity: "{{ asg_des }}"
    wait_for_instances: true
    wait_timeout: "{{ asg_timeout }}"
    load_balancers: "{{ load_balancer_name }}"
  register: asg



